<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nettests on OONI: Open Observatory of Network Interference</title>
    <link>https://ooni.torproject.org/nettest/</link>
    <description>Recent content in Nettests on OONI: Open Observatory of Network Interference</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jan 0003 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ooni.torproject.org/nettest/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTTP Requests</title>
      <link>https://ooni.torproject.org/nettest/http-requests/</link>
      <pubDate>Wed, 01 Jan 0003 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/http-requests/</guid>
      <description>

&lt;h1 id=&#34;http-requests&#34;&gt;HTTP Requests&lt;/h1&gt;

&lt;p&gt;This test tries to detect online censorship based on a comparison of HTTP
requests over Tor and over the network of the user.&lt;/p&gt;

&lt;p&gt;HTTP is a protocol which allows communication between a client and a server. It
does so by handling a client&amp;rsquo;s request to connect to a server, and a server&amp;rsquo;s
response to a client&amp;rsquo;s request. Every time you connect to a website, your
browser (the client) sends a request through the HTTP protocol to the server
which is hosting that website. A server normally responds with the content of
the website it is hosting. In some cases though, Internet Service Providers
(ISP) prevent users from accessing certain websites by blocking or interfering
with the connection between them and the server.&lt;/p&gt;

&lt;p&gt;To detect such cases of censorship, we have developed a test which performs HTTP
requests to given websites over the network of its user, and then over the Tor
network. As Tor software is designed to circumvent censorship by making its
user&amp;rsquo;s traffic appear to come from a different part of the world, we have chosen
to use the Tor network as a baseline for comparing HTTP requests to websites. If
the two results match, then there is no clear sign of network interference; but
if the results are different, then the website that the user is testing is
likely censored.&lt;/p&gt;

&lt;p&gt;If one of the following is present in the results, then there is a sign of
network interference:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The length of the body of the two websites (over Tor and over the user&amp;rsquo;s
network) differs by some percentage&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The HTTP request over the user&amp;rsquo;s network fails&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The HTTP headers do not match&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; False positives might occur when the Tor control connection is being
discriminated by the server. This happens, for example, when a CloudFlare
CAPTCHA page appears.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTTP Host</title>
      <link>https://ooni.torproject.org/nettest/http-host/</link>
      <pubDate>Tue, 01 Jan 0002 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/http-host/</guid>
      <description>

&lt;h1 id=&#34;http-host&#34;&gt;HTTP Host&lt;/h1&gt;

&lt;p&gt;This test attempts to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;examine whether the domain names of websites are blocked&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;detect the presence of “middle boxes” (software which could be used for
censorship and/or traffic manipulation) in tested networks&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;assess which censorship circumvention techniques are capable of bypassing the
censorship implemented by the “middle box”&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP is a protocol which transfers or exchanges data across the internet. It
does so by handling a client&amp;rsquo;s request to connect to a server, and a server&amp;rsquo;s
response to a client&amp;rsquo;s request. Every time you connect to a server, you (the
client) send a request through the HTTP protocol to that server. Such requests
include “HTTP headers”, some of which (the “Host header”) include information
about the specific domain that you want to connect to. When you connect to
torproject.org, for example, the host header of your HTTP request includes
information which communicates that you want to connect to that domain.&lt;/p&gt;

&lt;p&gt;This test implements a series of techniques which help it evade getting detected
from censors and then uses a list of domain names (such as bbc.co.uk) to connect
to an OONI backend control server, which sends the host headers of those domain
names back to us. If a “middle box” is detected between the network path of the
probe and the OONI backend control server, its fingerprint might be included in
the JSON data that we receive from the backend control server. Such data also
informs us if the tested domain names are blocked or not, as well as how the
censor tried to fingerprint the censorship of those domains. This can sometimes
lead to the identification of the type of infrastructure being used to implement
censorship.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The presence of a middle box is not necessarily indicative of
censorship and/or traffic manipulation, as they are often used in networks for
caching purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS consistency</title>
      <link>https://ooni.torproject.org/nettest/dns-consistency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/dns-consistency/</guid>
      <description>

&lt;h1 id=&#34;dns-consistency&#34;&gt;DNS consistency&lt;/h1&gt;

&lt;p&gt;This test compares the DNS query results from a DNS resolver which is considered
to be reliable with one that is tested for tampering.&lt;/p&gt;

&lt;p&gt;The domain name system (DNS) is what is responsible for transforming a host name
(e.g. torproject.org) into an IP address (e.g. 38.229.72.16). ISPs, amongst
others, run DNS resolvers which map IP addresses to host names. In certain
circumstances though, ISPs map the wrong IP addresses to the wrong host names.
This is a form of tampering, which OONI can detect by running its DNS
consistency test.&lt;/p&gt;

&lt;p&gt;This test compares the IP address of a given host name allocated by the Google
DNS resolver (which we assume to not be tampered with) with the IP address
mapped to that website by a provider. If the two IP addresses of the same
website are different, then there is a sign of network interference. When ISPs
tamper with DNS answers, users are redirected to other websites or fail to
connect to their intended websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; DNS resolvers, such as Google or your local ISP, often provide users
with IP addresses that are closest to them geographically. Often this is not
done with the intent of network tampering, but merely for the purpose of
providing users faster access to websites. As a result, some false positives
might arise in OONI measurements.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Facebook Messenger test</title>
      <link>https://ooni.torproject.org/nettest/facebook-messenger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/facebook-messenger/</guid>
      <description>

&lt;h1 id=&#34;facebook-messenger-test&#34;&gt;Facebook Messenger test&lt;/h1&gt;

&lt;p&gt;This test is designed to examine the reachability of Facebook Messenger within a
tested network.&lt;/p&gt;

&lt;p&gt;OONI&amp;rsquo;s Facebook Messenger test attempts to perform a TCP connection and DNS
lookup to Facebook&amp;rsquo;s endpoints over the vantage point of the user. Based on this
methodology, Facebook Messenger is likely blocked if one or both of the
following apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TCP connections to Facebook&amp;rsquo;s endpoints fail&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS lookups to domains associated to Facebook do not resolve to IP addresses allocated to Facebook&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTTP Header Field Manipulation</title>
      <link>https://ooni.torproject.org/nettest/http-header-field-manipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/http-header-field-manipulation/</guid>
      <description>

&lt;h1 id=&#34;http-header-field-manipulation&#34;&gt;HTTP Header Field Manipulation&lt;/h1&gt;

&lt;p&gt;This test tries to detect the presence of network components (“middle box”)
which could be responsible for censorship and/or traffic manipulation.&lt;/p&gt;

&lt;p&gt;HTTP is a protocol which transfers or exchanges data across the internet. It
does so by handling a client&amp;rsquo;s request to connect to a server, and a server&amp;rsquo;s
response to a client&amp;rsquo;s request. Every time you connect to a server, you (the
client) send a request through the HTTP protocol to that server. Such requests
include “HTTP headers”, which transmit various types of information, including
your device&amp;rsquo;s operating system and the type of browser that it&amp;rsquo;s using. If you
are using Firefox on Windows, for example, the “user agent header” in your HTTP
request will tell the server that you&amp;rsquo;re using a Firefox browser on a Windows
operating system.&lt;/p&gt;

&lt;p&gt;This test emulates an HTTP request towards a server, but sends HTTP headers that
have variations in capitalization. In other words, this test sends HTTP requests
which include valid, but non-canonical HTTP headers. Such requests are sent to a
backend control server which sends back any data it receives. If we receive the
HTTP headers exactly as we sent them, then we assume that there is no “middle
box” in the network which could be responsible for censorship, surveillance
and/or traffic manipulation. If, however, such software is present in the
network that we are testing, it will likely normalize the invalid headers that
we are sending or add extra headers.&lt;/p&gt;

&lt;p&gt;Depending on whether the HTTP headers that we send and receive from a backend
control server are the same or not, we are able to evaluate whether software –
which could be responsible for traffic manipulation – is present in the network
that we are testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A false negative could potentially occur in the hypothetical instance
that ISPs are using highly sophisticated software that is specifically designed
to not interfere with HTTP headers when it receives them. Furthermore, the
presence of a middle box is not necessarily indicative of traffic manipulation,
as they are often used in networks for caching purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTTP invalid request line</title>
      <link>https://ooni.torproject.org/nettest/http-invalid-request-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/http-invalid-request-line/</guid>
      <description>

&lt;h1 id=&#34;http-invalid-request-line&#34;&gt;HTTP invalid request line&lt;/h1&gt;

&lt;p&gt;This test tries to detect the presence of network components (“middle box”)
which could be responsible for censorship and/or traffic manipulation.&lt;/p&gt;

&lt;p&gt;Instead of sending a normal HTTP request, this test sends an invalid HTTP
request line - containing an invalid HTTP version number, an invalid field count
and a huge request method – to an echo service listening on the standard HTTP
port. An echo service is a very useful debugging and measurement tool, which
simply sends back to the originating source any data it receives. If a middle
box is not present in the network between the user and an echo service, then the
echo service will send the invalid HTTP request line back to the user, exactly
as it received it. In such cases, we assume that there is no visible traffic
manipulation in the tested network.&lt;/p&gt;

&lt;p&gt;If, however, a middle box is present in the tested network, the invalid HTTP
request line will be intercepted by the middle box and this may trigger an error
and that will subsequently be sent back to OONI. Such errors indicate that
software for traffic manipulation is likely placed in the tested network, though
it&amp;rsquo;s not always clear what that software is. In some cases though, we are able
to identify censorship and/or surveillance vendors through the error messages in
the received HTTP response.&lt;/p&gt;

&lt;p&gt;So far, based on this technique we have
&lt;a href=&#34;https://explorer.ooni.torproject.org/highlights/&#34;&gt;detected&lt;/a&gt; the use of
&lt;strong&gt;BlueCoat&lt;/strong&gt;, &lt;strong&gt;Squid&lt;/strong&gt; and &lt;strong&gt;Privoxy&lt;/strong&gt; in networks across 11 countries around
the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A false negative could potentially occur in the hypothetical instance
that ISPs are using highly sophisticated censorship and/or surveillance software
that is specifically designed to not trigger errors when receiving invalid HTTP
request lines like the ones of this test. Furthermore, the presence of a middle
box is not necessarily indicative of traffic manipulation, as they are often
used in networks for caching purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lantern</title>
      <link>https://ooni.torproject.org/nettest/lantern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/lantern/</guid>
      <description>

&lt;h1 id=&#34;lantern&#34;&gt;Lantern&lt;/h1&gt;

&lt;p&gt;This test provides an automated way of examining whether Lantern works in a
tested network.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://getlantern.org/&#34;&gt;Lantern&lt;/a&gt; is a centralized and peer-to-peer proxy,
which is used as a circumvention tool. It detects whether websites are blocked
and, if so, it allows you to access them via Lantern servers or via the network
of Lantern users.&lt;/p&gt;

&lt;p&gt;This test runs Lantern and checks to see if it is working. If it&amp;rsquo;s able to
connect to a Lantern server and reach a control website over it, then we
consider that Lantern can be used for censorship circumvention within the tested
network. If however the test is unable to connect to Lantern servers, then it is
likely the case that they are blocked within the tested network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Meek Fronted Requests</title>
      <link>https://ooni.torproject.org/nettest/meek-fronted-requests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/meek-fronted-requests/</guid>
      <description>

&lt;h1 id=&#34;meek-fronted-requests&#34;&gt;Meek Fronted Requests&lt;/h1&gt;

&lt;p&gt;This test examines whether the domains used by Meek (a type of &lt;a href=&#34;https://bridges.torproject.org/&#34;&gt;Tor
bridge&lt;/a&gt;) work in tested networks.&lt;/p&gt;

&lt;p&gt;Meek is a pluggable transport which uses non-blocked domains, such as
google.com, awsstatic.com (Amazon cloud infrastructure) and ajax.aspnetcdn.com
(Microsoft azure cloud infrastructure), to proxy its users over
&lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt; to blocked websites, while hiding both the
fact that they are connecting to such websites and how they are connecting to
them. As such, Meek is useful for not only connecting to websites that are
blocked, but for also hiding which websites you are connecting to.&lt;/p&gt;

&lt;p&gt;Below is a simplified explanation of how this works:&lt;/p&gt;

&lt;p&gt;[user] → &lt;a href=&#34;https://www.google.com]&#34;&gt;https://www.google.com]&lt;/a&gt; → Meek hosted on the cloud] → Tor] → blocked-
[website]&lt;/p&gt;

&lt;p&gt;The user will receive a response (access to a blocked website, for example) from
cloud-fronted domains, such as google.com, through the following way:&lt;/p&gt;

&lt;p&gt;[blocked-website] → Tor] → Meek hosted on the cloud] → &lt;a href=&#34;https://www.google.com]&#34;&gt;https://www.google.com]&lt;/a&gt; →
[user]&lt;/p&gt;

&lt;p&gt;In short, this test does an encrypted connection to cloud-fronted domains over
HTTPS and examines whether it can connect to them or not. As such, this test
enables users to check whether Meek enables the circumvention of censorship in
an automated way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NDT Speed Test</title>
      <link>https://ooni.torproject.org/nettest/ndt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/ndt/</guid>
      <description>

&lt;h1 id=&#34;ndt-speed-test&#34;&gt;NDT Speed Test&lt;/h1&gt;

&lt;p&gt;NDT (Network Diagnostic Test) is designed to measure the &lt;em&gt;speed&lt;/em&gt; and
&lt;em&gt;performance&lt;/em&gt; of tested networks.&lt;/p&gt;

&lt;p&gt;This network performance test was originally developed by The Internet2 Project
and is currently maintained by &lt;a href=&#34;http://www.measurementlab.net/tools/ndt/&#34;&gt;Measurement Lab
(M-Lab)&lt;/a&gt;. NDT is designed to measure
the speed and performance of networks by connecting to M-Lab servers close to
the user, and by subsequently uploading and downloading random data. In doing
so, NDT collects TCP/IP low level information that is useful to examining and
characterizing the quality of the network path between the user and the mLab
server.&lt;/p&gt;

&lt;p&gt;OONI utilizes an &lt;em&gt;&lt;a href=&#34;https://github.com/measurement-kit/measurement-kit/tree/master/src/libmeasurement_kit/ndt&#34;&gt;implementation of
NDT&lt;/a&gt;&lt;/em&gt;
for &lt;a href=&#34;https://github.com/measurement-kit/measurement-kit&#34;&gt;measurement-kit&lt;/a&gt;,
which is a network measurement library for running both desktop and mobile
network measurement tests. This NDT implementation is included as
a test that can be run via &lt;strong&gt;OONI&amp;rsquo;s mobile app&lt;/strong&gt;. Running NDT can be useful as the
type of information that it collects can potentially be used to examine cases
of throttling.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; NDT is a general-purpose performance test conducted against third-
party servers provided by &lt;a href=&#34;https://www.measurementlab.net/&#34;&gt;Measurement Lab (M-Lab)&lt;/a&gt;. M-Lab&amp;rsquo;s NDT services require the
retention and disclosure of IP addresses for research purposes. For more about
M-Lab&amp;rsquo;s data governance, see its &lt;a href=&#34;https://www.measurementlab.net/privacy/&#34;&gt;privacy statement&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Psiphon</title>
      <link>https://ooni.torproject.org/nettest/psiphon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/psiphon/</guid>
      <description>

&lt;h1 id=&#34;psiphon&#34;&gt;Psiphon&lt;/h1&gt;

&lt;p&gt;This test provides an automated way of examining whether Psiphon works in a
tested network.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://psiphon.ca/&#34;&gt;Psiphon&lt;/a&gt; is a free and open source tool that utilises SSH,
VPN and HTTP proxy technology for censorship circumvention.&lt;/p&gt;

&lt;p&gt;This test runs Psiphon and checks to see if it is working. If it&amp;rsquo;s able to
connect to a Psiphon server and reach a website over it, then we consider that
Psiphon can be used for censorship circumvention within the tested network. If
however the test is unable to connect to Psiphon servers, then it is likely the
case that they are blocked within the tested network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Telegram test</title>
      <link>https://ooni.torproject.org/nettest/telegram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/telegram/</guid>
      <description>

&lt;h1 id=&#34;telegram-test&#34;&gt;Telegram test&lt;/h1&gt;

&lt;p&gt;This test is designed to examine the reachability of Telegram&amp;rsquo;s app and web
version within a tested network.&lt;/p&gt;

&lt;p&gt;More specifically, this test attempts to perform an HTTP POST request, and
establish a TCP connection to Telegram’s access points (DCs), as well as an
HTTP GET request to Telegram&amp;rsquo;s web version (&lt;code&gt;web.telegram.org&lt;/code&gt;) over the
vantage point of the user. The test is triggered as blocking when connections
to &lt;em&gt;all&lt;/em&gt; access points defined in the &lt;a href=&#34;https://github.com/TheTorProject/ooni-probe/blob/master/ooni/nettests/blocking/telegram.py#L16-L22&#34;&gt;test&lt;/a&gt;
fail.&lt;/p&gt;

&lt;p&gt;Based on this methodology Telegram’s &lt;em&gt;app&lt;/em&gt; is likely blocked if any of the
following apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TCP connections to all the tested Telegram access points fail&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTTP POST requests to Telegram&amp;rsquo;s access points do &lt;em&gt;not&lt;/em&gt; send back a
response to OONI&amp;rsquo;s servers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Telegram&amp;rsquo;s &lt;em&gt;web version&lt;/em&gt; is likely blocked if any of the following apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTP(S) GET requests to &lt;code&gt;web.telegram.org&lt;/code&gt; do &lt;em&gt;not&lt;/em&gt; send back a consistent
response to OONI&amp;rsquo;s servers.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tor Bridge Reachability</title>
      <link>https://ooni.torproject.org/nettest/tor-bridge-reachability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/tor-bridge-reachability/</guid>
      <description>

&lt;h1 id=&#34;tor-bridge-reachability&#34;&gt;Tor Bridge Reachability&lt;/h1&gt;

&lt;p&gt;This test examines whether &lt;strong&gt;&lt;a href=&#34;https://bridges.torproject.org/&#34;&gt;Tor bridges&lt;/a&gt;&lt;/strong&gt;
work in tested networks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt; is free and open source software which
enables online anonymity and censorship circumvention. It was designed to bounce
communications around a distributed network of relays run by volunteers around
the world, thus hiding users&amp;rsquo; IP address and circumventing online tracking and
censorship. However, Internet Service Providers (ISPs) in various countries
around the world are often ordered by their governments to block users&amp;rsquo; access
to Tor. As a result, Tor bridges were developed to enable users to connect to
the Tor network in countries where such access is blocked.&lt;/p&gt;

&lt;p&gt;This test runs Tor with a list of bridges and if it&amp;rsquo;s able to connect to them
successfully, we consider that Tor bridges are not blocked in the tested
network. If the test, however, is unable to bootstrap a connection, then the Tor
bridges are either offline or blocked.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vanilla Tor</title>
      <link>https://ooni.torproject.org/nettest/vanilla-tor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/vanilla-tor/</guid>
      <description>

&lt;h1 id=&#34;vanilla-tor&#34;&gt;Vanilla Tor&lt;/h1&gt;

&lt;p&gt;This test examines the reachability of the &lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor network&lt;/a&gt; (which is designed for online anonymity
and censorship circumvention).&lt;/p&gt;

&lt;p&gt;The Vanilla Tor test attempts to start a connection to the Tor network. If the
test successfully bootstraps a connection within a predefined amount of seconds (300 by default),
then Tor is considered to be reachable from the vantage point of the user. But if the test
does &lt;em&gt;not&lt;/em&gt; manage to establish a connection, then the Tor network is likely blocked within the
tested network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WhatsApp test</title>
      <link>https://ooni.torproject.org/nettest/whatsapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/whatsapp/</guid>
      <description>

&lt;h1 id=&#34;whatsapp-test&#34;&gt;WhatsApp test&lt;/h1&gt;

&lt;p&gt;This test is designed to examine the reachability of both WhatsApp&amp;rsquo;s app and
the WhatsApp web version within a tested network.&lt;/p&gt;

&lt;p&gt;OONI&amp;rsquo;s WhatsApp test attempts to perform an HTTP GET request, TCP
connection and DNS lookup to WhatsApp’s endpoints, registration service and web
version over the vantage point of the user. Based on this methodology,
WhatsApp’s &lt;em&gt;app&lt;/em&gt; is likely blocked if any of the following apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TCP connections to WhatsApp&amp;rsquo;s endpoints fail;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TCP connections to WhatsApp&amp;rsquo;s registration service fail;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS lookups resolve to IP addresses that are &lt;em&gt;not&lt;/em&gt; allocated to WhatsApp;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTTP requests to WhatsApp&amp;rsquo;s registration service do &lt;em&gt;not&lt;/em&gt; send back a response
to OONI&amp;rsquo;s servers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WhatsApp&amp;rsquo;s &lt;em&gt;web interface&lt;/em&gt; is likely blocked if any of the following apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TCP connections to web.whatsapp.com fail;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS lookup illustrates that a different IP addresses has been allocated to
web.whatsapp.com;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTTP requests to web.whatsapp.com do &lt;em&gt;not&lt;/em&gt; send back a consistent response to OONI&amp;rsquo;s
servers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Web connectivity</title>
      <link>https://ooni.torproject.org/nettest/web-connectivity/</link>
      <pubDate>Sat, 01 Jan 0000 00:00:00 +0000</pubDate>
      
      <guid>https://ooni.torproject.org/nettest/web-connectivity/</guid>
      <description>

&lt;h1 id=&#34;web-connectivity&#34;&gt;Web connectivity&lt;/h1&gt;

&lt;p&gt;This test examines whether websites are reachable and if they are not, it
attempts to determine whether access to them is blocked through DNS tampering,
TCP connection RST/IP blocking or by a transparent HTTP proxy.&lt;/p&gt;

&lt;p&gt;Specifically, this test is designed to perform the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Resolver identification&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DNS lookup&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TCP connect&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTTP GET request&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, this test performs the above (excluding the first step, which is
performed only over the network of the user) both over a control server and over
the network of the user. If the results from both networks match, then there is
no clear sign of network interference; but if the results are different, then
the websites that the user is testing are likely censored.&lt;/p&gt;

&lt;p&gt;Below we provide information about how each step performed under the web
connectivity test works.&lt;/p&gt;

&lt;h2 id=&#34;1-resolver-identification&#34;&gt;1. Resolver identification&lt;/h2&gt;

&lt;p&gt;The domain name system (DNS) is what is responsible for transforming a host name
(e.g. torproject.org) into an IP address (e.g. 38.229.72.16). Internet Service
Providers, amongst others, run DNS resolvers which map IP addresses to host
names. In some circumstances though, ISPs map the requested host names to the
wrong IP addresses, which is a form of tampering.&lt;/p&gt;

&lt;p&gt;As a first step, the web connectivity test attempts to identify which DNS
resolver is being used by the user. It does so by performing a DNS query to
special domains (such as whoami.akamai.com) which will disclose the IP address
of the resolver.&lt;/p&gt;

&lt;h2 id=&#34;2-dns-lookup&#34;&gt;2. DNS lookup&lt;/h2&gt;

&lt;p&gt;Once the web connectivity test has identified the DNS resolver of the user, it
then attempts to identify which addresses and are mapped to the tested host
names by the resolver. It does so by performing a DNS lookup, which asks the
resolver to disclose which IP addresses are mapped to the tested host names, as
well as which other host names are linked to the tested host names under DNS
queries.&lt;/p&gt;

&lt;h2 id=&#34;3-tcp-connect&#34;&gt;3. TCP connect&lt;/h2&gt;

&lt;p&gt;The web connectivity test will then try to connect to the tested websites by
attempting to establish a TCP session on port 80 (or port 443 for URLs that
begin with HTTPS) for the list of IP addresses that were identified in the
previous step (DNS lookup).&lt;/p&gt;

&lt;h2 id=&#34;4-http-get-request&#34;&gt;4. HTTP GET request&lt;/h2&gt;

&lt;p&gt;As the web connectivity test connects to tested websites (through the previous
step), it sends requests through the HTTP protocol to the servers which are
hosting those websites. A server normally responds to an HTTP GET request with
the content of the webpage that is requested.&lt;/p&gt;

&lt;h2 id=&#34;comparison-of-results-identifying-censorship&#34;&gt;Comparison of results: Identifying censorship&lt;/h2&gt;

&lt;p&gt;Once the above steps of the web connectivity test are performed &lt;em&gt;both&lt;/em&gt; over a
control server and over the network of the user, the collected results are then
compared with the aim of identifying whether and how tested websites are
tampered with. If the compared results do &lt;em&gt;not&lt;/em&gt; match, then there is a sign of
network interference.&lt;/p&gt;

&lt;p&gt;Below are the conditions under which the following types of blocking are
identified:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DNS blocking:&lt;/strong&gt; If the DNS responses (such as the IP addresses mapped to
host names) do &lt;em&gt;not&lt;/em&gt; match&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;TCP/IP blocking:&lt;/strong&gt; If a TCP session to connect to websites was &lt;em&gt;not&lt;/em&gt;
established over the network of the user&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;HTTP blocking:&lt;/strong&gt; If the HTTP request over the user&amp;rsquo;s network failed, or the&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;**HTTP status codes don&amp;rsquo;t match, or all of the following apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The body length of compared websites (over the control server and the
network of the user) differs by some percentage&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The HTTP headers names do not match&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The HTML title tags do not match&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The examples below (testing piratebay.se and google.com for censorship in Italy) show
what the output of the web connectivity test could look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Starting test for http://thepiratebay.se/

* doing DNS query for thepiratebay.se

* connecting to 216.58.198.46:443

* doing HTTP(s) request http://thepiratebay.se/

* performing control request with backend

Result for http://thepiratebay.se/
----------------------------------
* BLOCKING DETECTED due to dns
* Is NOT accessible

Starting test for https://google.com/

* doing DNS query for google.com

* connecting to 83.224.65.41:80

* doing HTTP(s) request https://google.com/

* performing control request with backend

Result for https://google.com/
------------------------------
* No blocking detected
* Is accessible

Summary for web_connectivity
----------------------------

Accessible URLS
---------------
* https://google.com/

Not accessible URLS
-------------------
* http://thepiratebay.se/

URLS possibly blocked due to dns
--------------------------------
* http://thepiratebay.se/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; DNS resolvers, such as Google or your local ISP, often provide users
with IP addresses that are closest to them geographically. Often this is not
done with the intent of network tampering, but merely for the purpose of
providing users faster access to websites. As a result, some false positives
might arise in OONI measurements. Other false positives might occur when tested
websites serve different content depending on the country that the user is
connecting from, or in the cases when websites return failures even though they
are not tampered with.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>